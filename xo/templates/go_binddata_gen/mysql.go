package tplbin

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _templates_mysql_enum_go_tpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x3f\x4f\xc3\x30\x10\xc5\xf7\x48\xf9\x0e\x4f\x51\x87\x76\x88\x25\x16\x86\x4a\x9d\x3a\xb0\x75\x01\xc1\x88\x8c\x31\x8d\x21\xb1\x2b\xff\x29\x42\x96\xbf\x3b\x3a\xc7\x51\xe8\x1f\x24\x48\x16\x9f\xef\xee\xf7\xde\x73\x8c\x2d\x16\x9a\x0f\x12\xeb\x0d\xde\x8d\xd2\x4f\xca\x77\x68\x9e\x1b\xb0\x07\xfe\xd2\xcb\x1d\xb5\xd8\xd6\xf4\x61\xd0\xf9\xdc\xa6\x54\x57\x31\x62\x21\xf8\x20\xfb\x5d\xd9\xcc\xc5\x96\x3b\x59\x60\xe3\x50\x8b\x85\xeb\x8c\xf5\xd3\xd4\x5c\xfc\xd8\xce\xc0\x03\x17\x1f\x7c\x2f\x21\x75\x18\xea\xaa\xae\xfc\xd7\x41\xe2\x54\x25\x25\x04\xa5\xfd\xcd\x2d\xf5\x85\xd1\xce\x63\x99\x9d\x58\xae\xf7\x12\xec\x91\xf7\x41\xba\xac\x0c\xe0\x6c\xb9\x4d\x89\xec\xcc\x36\x19\xf1\x2e\x04\x36\x50\xc6\x73\x64\xac\xd4\xaf\x19\xb6\x22\xbd\xb7\xa0\x05\x96\x34\x3f\x67\xb8\x02\x58\xe1\xde\x5b\xa5\xf7\xcb\x15\x5c\x3e\x20\x8e\x6e\x8e\xdc\xe2\x48\x06\xcb\x3d\x31\xe9\xde\x7d\x2a\x2f\x3a\x5c\x82\xc7\x76\x09\x72\x3d\x21\x7d\x82\xb2\xfc\x21\xea\x7a\x5e\x19\xed\x90\x95\x0d\x9a\x18\x59\x4a\x0d\x4e\xd4\xa6\xe0\x54\xa6\xc9\xa8\x95\x3e\x58\x3d\x2e\xd6\x55\xfa\xd7\x9b\xdc\x99\x5f\x5e\xa5\x40\xcf\x11\x6c\x1a\x2f\x42\xf4\x7f\x07\x00\x00\xff\xff\x58\xcf\xac\xaa\xa8\x02\x00\x00")

func templates_mysql_enum_go_tpl() ([]byte, error) {
	return bindata_read(
		_templates_mysql_enum_go_tpl,
		"templates/mysql/enum.go.tpl",
	)
}

var _templates_mysql_repo_go_tpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xdb\x6e\xdb\x3c\x12\xbe\x4e\x80\xbc\xc3\xac\xb0\x28\xa4\xc0\x3f\xd3\x05\x16\x7b\x91\x85\x17\x88\xe3\xa4\x08\xd0\xa6\x87\xa4\xdb\x8b\xa2\xa8\x69\x6b\xec\x10\x55\x24\x8b\xa2\x9b\x64\x5d\xbf\xfb\x82\x07\x9d\x69\x49\xb6\x63\xa4\xed\x45\x6a\x89\xe4\xcc\x37\x1f\x39\x27\x6a\xb9\xfc\x0b\xfe\x2e\xe8\x38\xc0\x6b\x7a\x8f\xe7\xf4\x1e\x03\x38\xed\xc3\x44\xfe\x38\xa7\x09\x02\xb9\x95\x83\xfa\xaf\x9c\x02\x7f\xad\x56\x47\x87\x6a\x59\x72\x17\x71\xa1\xde\x9d\xf6\x21\x7f\xa8\x8a\x53\x0b\xcc\x12\xe6\xdf\x3e\xcd\xd5\x7c\x87\x85\xc2\x81\x54\x16\xa7\xe1\x2c\xd3\x75\x1e\x05\x8b\xfb\x30\x51\x83\x00\x00\x72\x02\x9b\x02\xc6\x60\x86\x94\x1a\x87\xf9\x4e\x36\x25\x9d\x96\x2a\xe8\x03\x79\x13\xa9\x5f\x45\x21\x18\xfa\xa9\x42\x0c\x7d\xd0\xb8\xe6\x74\xf2\x83\xce\x10\x38\xce\x23\xf9\xcc\xee\xe7\x11\x17\xe0\xea\x65\x49\x0c\xce\x8c\x89\xbb\xc5\x98\x4c\xa2\xfb\x13\x0c\x66\x9c\x25\x27\x49\xcc\x03\x47\x4f\x28\x8e\xce\x7f\xcc\x4e\x90\xf3\x88\x27\x96\xc1\x59\x14\xcd\x02\x3c\x79\x60\x1c\x9d\xa3\x43\x4f\xaa\x12\x12\xe0\xd5\x72\x59\xa3\x6c\xb5\xfa\x84\xf3\x28\x61\x22\xe2\x4f\xc0\x42\x81\x7c\x4a\x27\x08\x4b\x2d\xb5\x6d\xc5\xc7\x05\xf2\xa7\xc1\x82\x05\x3e\x72\xbd\xc2\xac\x0b\x13\xe4\xc2\xba\xd8\x9d\x88\x47\x98\x44\xa1\xc0\x47\x41\xce\xf5\xff\x3d\x90\x53\xf3\x7d\x5d\xad\x40\xad\x23\x56\x09\xe7\x1c\xa9\x40\x0f\xdc\xe3\x86\x49\x3d\x50\xf4\x78\xad\x78\xbe\x30\x71\x77\xb3\x98\x4e\xd9\xe3\x73\x21\xeb\x41\xa2\xe4\x41\x12\x93\x9b\x38\x60\xff\x43\xfe\x5c\x60\xaf\x86\x9f\x30\x59\x04\x62\xbf\x50\x59\x28\xfe\xf5\xcf\x1c\x93\x46\xf5\x79\xee\x53\x81\x56\x59\x83\xa7\x4b\x86\x81\x9f\xd8\x51\x31\x5f\x01\x33\xee\x22\x8d\xdd\x04\xa7\x56\xbb\x11\x7f\x0d\x48\x77\xe7\x6d\x23\x24\xfa\xef\x10\x03\xdc\x23\x1e\xa5\xb0\x55\xd3\xe0\xe9\x6a\xd8\x6d\x7f\x3c\x70\xc7\x51\x14\xd8\x2c\xb9\x64\xa1\x7f\x16\x04\x7b\x32\xe5\x92\x05\x02\x79\x0f\xe6\x74\xc6\x42\x2a\x58\x14\xc2\xb1\x8a\x48\x21\x0d\xc8\x87\xec\xa5\x07\xae\x16\xf2\x96\x25\x76\x2f\x29\x43\x6f\x02\xdd\xe2\xfc\x7b\x40\x9f\x7a\x1c\x26\x40\x08\x29\xb9\x5d\x67\xab\x8e\x0e\x55\x3a\xe9\x18\xd5\x8b\x31\xba\x1e\xe1\x9b\xd8\x19\xd0\x04\xd5\x6a\xfb\xde\x4e\x95\xc5\xd0\xe4\x0e\x29\x29\x53\x15\x1f\x20\x11\x9c\x85\xb3\x2c\xe8\x54\x09\x38\x96\x4f\x18\xe0\x44\x18\xb8\xe5\x8d\x3c\xf3\xfd\x9c\x47\x3b\xa4\x78\x0c\x16\x21\xed\x07\xaa\x41\xf3\x2a\x23\xba\x2d\x7b\x26\x82\x2f\x26\x22\x25\x76\x38\x80\x4c\xd7\xd5\x70\xac\x5f\x96\xf6\x62\xb3\xe4\xda\x19\x47\x49\x47\x8e\x49\xad\xff\x49\x39\x5c\xe3\x43\x9b\x25\x7d\x90\xb5\x03\xb9\xc6\x87\x1b\x14\xa6\x3c\x51\x6f\x6e\x94\x38\x37\xc4\x07\xb7\x45\x86\xd7\x03\xe7\xd8\xf1\x7a\x5b\x2d\x2e\x9a\x60\x11\x34\x60\xa1\xaf\xc4\xb4\x31\xe8\xf5\xa0\x0b\xd4\xed\x84\x57\x40\x6e\x6a\x96\x54\xaa\x7c\x79\xba\x08\x27\xe0\x56\x43\x0d\x87\xe3\x36\xd8\xbf\x51\x95\x95\x1e\x7a\x8e\x62\xc1\xc3\x9a\x1e\x4e\x3a\x17\x60\x75\x90\x3d\x08\x59\x90\x3a\xe2\x5e\xc8\xfa\x9d\x4a\xc0\x94\x49\xe9\xa9\xc8\x79\x31\xbb\xeb\xbf\xcc\x57\x53\x65\x63\xb3\x11\xcd\xc5\xd2\xd1\x46\xb2\x06\x6c\x42\xad\xec\x81\x38\x87\xbf\xf5\x25\xf7\x29\xa4\xc2\x06\x87\x4c\xd7\x07\x7a\xc0\xf4\x3d\xa1\x0e\x2c\x25\xa6\x4e\xfb\x4d\x64\x2d\xcd\xca\x78\xac\xfa\xba\x34\x06\xbb\xd2\xe1\xc9\x25\x8f\xee\xdd\x91\x44\x5a\x6b\x0c\x57\xab\x51\x56\x97\xc6\x63\xf2\xe5\x0e\x39\xba\x49\x4c\x2e\xe2\xa5\x33\x62\xfe\xc8\x39\x05\xe6\xaf\x8c\x2d\xd2\x10\x1b\x57\xc3\x01\x79\x83\x86\x8e\x57\x16\xec\x32\x9b\x64\x5a\xb6\x22\xc4\x8c\xd9\x85\x87\x2c\xd8\xe7\x99\x7e\x81\x4e\x61\xcd\xd1\xad\x6c\xb1\xc6\xec\x3a\x23\xab\xb2\x91\xe3\xa5\x4d\xb9\x5b\xee\xb7\x1b\xfb\xf6\xf4\x9f\x92\x5a\x6c\xdd\xa5\xc4\x5e\x59\x50\xda\x8f\xcb\x67\x8f\xfc\x97\x06\x0b\xdc\x4a\x57\x95\x43\xc9\x5e\xe1\x32\xa3\x04\xa2\x09\x42\x76\xc0\x0c\xc1\xf5\x33\xa6\x07\x54\xf6\x48\xb7\xe1\x8c\xcf\x92\xf4\xf7\x85\x8e\x06\xfa\x81\xdc\x46\x37\x71\xe0\x7a\xf9\xea\x4c\xf2\x85\xf5\x00\x17\x0e\xea\xeb\x82\xc4\x7c\x42\xc1\xec\x78\x4c\x4c\x9c\x5c\x03\x89\x10\xe2\x65\x2e\xa0\x7f\x9c\x9c\x00\x5f\x84\x10\xcb\xa9\x47\x87\x07\x1c\x93\x86\xf8\x35\x1c\x90\x8b\x47\x9c\x68\xa7\x54\xee\x77\x50\xf3\xbc\x83\x83\x1c\xae\xf2\xb8\x83\x92\x2e\x14\x9c\xe1\x4f\x04\xe6\xcb\xc5\x79\xb0\xe4\x98\x90\xb7\x34\x11\xfa\xfc\x5d\xf9\xee\xa6\xc2\xcd\x80\x14\xa9\x7d\x17\x76\x73\xde\x3f\xa1\xa1\xb6\xba\x34\xa4\x8c\x2c\x94\xa8\x77\x74\x2e\xf9\xbd\xa7\xf3\xaf\xba\xbe\xff\x96\x35\x19\xcb\x2c\xc2\x77\xf2\x2a\x36\xad\x33\xd9\xe4\x55\x66\xdf\xbc\xea\x71\xce\x70\x7d\xb5\xc6\x83\x6f\xd0\xd7\xdb\xd3\x55\x4f\xcd\x17\xca\xd7\x7a\xa5\xf0\xa6\xe9\x75\x6d\xd1\x4d\xa5\x2d\x72\x83\xe2\x1d\x9d\xbb\x19\x46\xaf\x21\x7d\x69\xd9\xdf\x7b\x4d\x39\xac\xe2\x2f\x5b\x25\x2b\x73\x01\xa9\x92\xef\xc7\xb5\xb9\x58\x87\x6c\x5b\x32\x76\xbc\x9a\x8c\x7e\xf6\xb3\xd5\x3e\xae\x12\x55\xc7\x52\xa1\x53\x36\xd7\x12\x7b\x19\x84\xdd\x78\x49\xd3\x78\x2a\x55\x79\xff\xce\xb9\x7b\xcf\xb7\x42\x6e\xd9\x81\xbf\x37\x05\xdd\xf6\x5b\xa3\xba\x76\x72\x35\xf4\x4a\xf4\x28\xde\xcc\xbd\xc4\x5e\x58\xd9\xfa\x06\xab\x5b\x5d\x62\x1c\x57\x47\x0c\xeb\x19\x97\xae\xeb\x3a\x74\x22\xd8\x4f\x74\x7a\x30\xa5\x41\x82\x85\x32\x14\xfa\xcd\xb5\xe8\x9e\x9c\x59\xc1\x28\x1e\x5b\x28\x6d\x8b\xe0\x0b\x7c\x9e\x62\xf3\x05\x6f\x8a\x2c\x97\x65\x6b\x6f\x6c\x5a\x5b\xd1\x62\x17\x4e\x3a\x1b\x95\x1a\x91\x22\xcc\xa1\xe9\x9a\x67\x27\x72\x4b\x17\x03\x7f\x1a\xd1\x96\x4e\xb5\xda\xcf\x69\x5d\xc5\x34\xb2\x2e\x8b\x98\x13\x6f\xec\x28\x1f\xfa\x4e\x35\xc4\x9a\x2f\x78\xc6\x6b\x6b\x45\x7c\xa6\x8b\x9c\xa9\x19\xd0\xb7\x16\xc8\x66\x6a\x3c\x4e\xbd\x37\xbb\xda\x3b\xf3\x7d\xcd\xa8\x2b\x07\xd7\xa7\x48\x32\xd2\x10\x46\x4e\x2f\x5f\xac\x57\xbe\x0f\x55\xb5\xb7\x84\x65\x36\x70\x11\x9f\x2a\xcf\x5d\xc1\xca\xfb\xf7\x1a\xff\xb7\x14\xf0\x06\x5f\x7d\x4e\xc5\xea\x15\x60\x90\xe0\x7e\x8d\x2c\xd1\xba\x17\x23\x2a\x3d\x95\xb4\xc8\xb2\xbd\x3b\x99\x63\xeb\x26\x53\xcb\x1a\x0a\xc6\x56\x73\x9b\x4c\xad\xda\x55\xe8\x15\xab\xcf\xf5\x7d\xdc\xa0\x7b\xdd\xc8\x4f\x9e\xf7\x6c\xbc\xb8\x03\x54\x89\xb4\x92\x9b\xa6\xec\x69\xc4\x65\xda\x36\xed\xb9\x6c\x25\x15\xc1\x59\xc4\x2c\x40\x8a\x75\x43\x4c\x55\x77\x8e\xad\x7d\xf9\x7a\xbb\xd6\xd9\x63\x6d\xc6\x0b\x5a\x4b\x0d\x78\x45\xd0\x73\x14\x01\x2f\xf1\x0d\x66\xb3\x8c\x5e\x43\xd8\x53\xc6\xe7\xfa\x9b\x93\xf5\x86\xb9\xfa\x25\xf9\x30\x19\xfc\xb4\x0f\x5f\xbf\xe9\x34\xde\x31\x12\x64\x77\xc9\xe9\x3f\xa7\x16\xe7\x9a\x2e\xcd\xca\x27\xab\x18\x08\x0a\x54\x94\x39\xef\x69\x15\xf5\xb0\xe0\xa4\x85\xc8\xee\x17\xfc\x9b\x7f\x9c\xde\xa0\x5a\x6a\xdf\xae\x80\x25\x02\xba\x7c\xc2\xed\x7a\xaa\xbb\x7f\xb7\xce\x6b\xd3\xae\xa7\x7c\x57\x3e\xdb\xbe\x98\x3c\x1f\xb3\x0d\x95\xe9\xb6\x8c\xa7\x49\xcc\xda\x0c\x6f\xd1\x10\xac\x2d\x68\xc9\xb1\x53\x6d\x13\x1a\x03\x7f\xda\xb2\x35\x9b\xb4\x5c\xd5\xbf\x34\xe4\x79\xb9\x6e\x51\x97\x80\xb8\x07\x58\xad\xd7\x35\xa6\x37\xd0\x37\x36\x72\x2f\xc9\x90\x0a\xba\xd1\x57\x17\xb9\xca\xa6\x95\x4d\x8b\xc7\xca\x94\xf4\xbf\x7e\x15\x5e\x92\x0f\xc8\x3f\xd0\x19\xae\x19\x2c\x8c\x14\xb4\x2a\x90\xb7\x91\xa0\xc1\x79\xb4\x08\x05\xf4\x21\xc0\xd0\xcd\xa0\x7b\x6b\xf0\xa9\xbc\x5b\xc2\x27\x5b\x26\x39\xf6\x0e\x05\xcd\x03\xe8\x5b\xf3\xc6\xa7\x82\x66\x76\x34\xed\xec\x36\x67\xf5\xfc\xfd\xe7\xeb\x5b\xf7\x1f\x1e\x9c\xdd\xc0\x44\x5a\xe1\xac\xad\xaf\xb6\x3f\x8e\xb5\x0e\xee\xd5\x2b\x45\x95\xa9\x9c\xdf\xf0\x68\x31\x1f\x3c\x25\x1e\xfc\x07\x5e\x97\xca\x27\x75\x6f\x98\x5f\x3d\x5a\xc0\xaa\x1e\xd2\x8c\xab\x82\x93\x3a\xe5\x82\xa7\xd3\x05\x61\x4a\x7e\xe9\xb4\x59\xb6\xd7\x4c\x23\xea\x45\xe5\x3e\xb0\x70\xf8\x56\x47\x87\xff\x0f\x00\x00\xff\xff\x51\x41\x61\xd7\xde\x2a\x00\x00")

func templates_mysql_repo_go_tpl() ([]byte, error) {
	return bindata_read(
		_templates_mysql_repo_go_tpl,
		"templates/mysql/repo.go.tpl",
	)
}

var _templates_mysql_table_go_tpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\xc1\x6e\xe3\x36\x10\xbd\x1b\xf0\x3f\xbc\x1a\x45\x2b\x2d\x1c\xf9\x1e\xc0\x87\xad\x77\x93\x4d\x91\x3a\x87\x66\xbb\x87\x20\x68\x68\x6b\x64\x2b\xa1\x49\x99\xa4\x9c\xa6\x82\xfe\xa2\xf7\x5e\xfa\x81\xfd\x84\x82\x94\x64\x2b\x8e\x2c\xdb\x49\x0e\xf5\xc5\xc2\x70\x38\xf3\xe6\x71\x66\x38\xcc\xb2\x13\x7c\x6f\xd8\x84\xd3\x98\x2d\x68\xc4\x16\xc4\x71\x3a\xc4\xd4\x7e\x8c\x98\x26\x04\xd7\xd5\x22\x4e\xf2\xbc\xdb\x49\xd8\xf4\x81\xcd\x08\x6e\x4f\xb7\xd3\xed\xc4\x8b\x44\x2a\x03\xaf\xdb\x01\x00\xbd\x44\x6f\x16\x9b\x79\x3a\x09\xa6\x72\x31\x20\x3e\x53\xb1\x1e\xe8\xa5\xe2\xbd\x42\xa1\xbe\x9a\x3c\xcc\x06\xa4\x94\x54\xba\xd7\xed\xf8\xd6\x98\x79\x4a\x08\x59\xf6\x02\x52\x9e\x43\x1b\x95\x4e\x0d\xb2\x6e\xc7\x62\x56\x4c\xcc\x08\xc1\x48\xf2\x74\x21\xb4\x05\x66\xa5\x71\x04\x26\x42\x04\x17\xfa\xb3\x48\x17\xf0\x68\x89\x60\x2c\xcd\x38\xe5\xdc\xda\x43\xc4\xb8\x26\x1f\x56\xdd\x62\xc9\xb2\x7a\xa0\x85\x2d\x17\x69\x9e\xe3\x43\x96\x21\x38\x97\xd7\x16\x50\x9e\xe3\xee\x5e\x4b\x71\xda\xcb\xb2\x9a\x5a\x9e\xf7\x10\x4e\x5e\x0a\xef\x2c\x18\x10\xd7\x74\x90\xa7\x37\x3a\x3a\x01\x89\x10\x15\x03\xd5\x77\xde\xce\xe6\x59\xcc\x0d\xa9\xbd\x9c\xee\x83\x1e\x0b\x43\x4a\x30\x1e\x14\xf6\xae\xc4\x59\x4c\x3c\xc4\x73\x28\xd6\xc8\xb7\x39\x29\xd2\xb8\xb9\xd5\xcb\xe0\xd7\x25\x8f\xff\x24\x55\x2c\xfc\x2c\x63\xd1\x24\xbf\xa4\xc8\xec\x5a\x3b\x57\x32\x4d\x7e\x7a\x72\x4b\x46\xc5\x62\x56\x88\xbf\xb0\x55\x2c\x66\xdb\x1b\x1c\x11\x51\x2a\xa6\xf0\x22\x77\xa8\xbb\xc8\xf0\x31\xa6\xc7\xe2\xd3\xf3\x8b\xc8\x22\x36\xa5\x2c\xb7\xf4\x58\xfb\x71\x84\x08\xc3\x21\x44\xcc\x2b\x91\xfd\x29\x32\xa9\x12\xf8\xa1\xc5\x74\x56\xb2\x50\xfe\x95\x3b\xa2\xa3\xc0\xad\xcb\xd0\xf3\x51\x44\x5d\x81\x28\xcd\xf5\xee\x6c\x22\x6d\xaa\x35\xcf\xef\x7a\x47\x79\xf8\x45\x86\xe9\x1e\x17\xdb\x1e\x8e\x73\x70\xa1\xc7\x31\xf7\x7c\x4c\xa4\xe4\x5b\x96\x2b\x62\x4b\x7b\xcd\xd9\x78\x98\x97\x8f\x61\xd8\x92\xb2\x5e\xe4\xd4\x5c\xb5\x6d\x65\xaf\x95\xf5\xb1\xaa\x1f\xbd\x5f\xc1\x8c\x82\x2c\xdb\x59\x05\x43\xb0\x24\x21\x11\x7a\x6d\x5a\x7d\x2c\x58\x72\xd3\xe0\xf2\xb6\xe6\x2f\xdb\xa0\x3b\xc5\x2a\xf7\x1d\x1d\xf5\x5a\x3a\x94\x04\x57\x6f\xde\x0a\x9b\x4a\xf0\x5b\x77\x6c\xe2\x2c\x2b\xb5\x16\x53\x21\xe9\x63\xe5\x37\xa6\xef\xa1\x90\x6c\x35\x7b\xf7\xaf\x40\x54\xb4\x81\x1a\x20\x27\xe8\xe3\xbe\x19\xcf\x61\x68\xaa\xfe\xf2\x2a\x44\x9b\xe6\x54\x43\xb5\x16\xbe\x11\x59\xd9\xdd\xbc\xd9\xa4\x2c\xc2\x43\x51\xad\xdb\x62\x0d\x54\x25\xeb\x63\x36\x79\x0b\xa8\xa2\xb7\x7a\xf3\x57\x90\x55\xb5\xe5\x1a\xaa\x52\xd4\xc7\xbc\x19\xd3\x60\x80\x2f\x4c\xcf\x6d\x03\x8a\x35\x52\x4d\x21\x22\xa9\x30\x65\x53\x2b\x0b\x82\x00\x8f\x84\x50\x8a\x1f\x0d\x04\x51\x88\xd8\xc0\xe6\x68\x50\xa4\xe3\x60\x80\xeb\xab\x4f\x57\xa7\x18\x29\x62\x86\x3e\x0b\x13\x9b\x27\x6b\xc8\xda\x98\x29\x96\xcc\x97\x1c\x17\x30\xf3\x58\x3c\xe0\xdf\xbf\xff\xf9\xab\xed\xa2\x2c\x6c\xbc\xf9\xa2\x7c\xb7\x3b\x3e\x7f\x16\xe1\x37\xc2\x9c\xad\x08\x46\x82\xfe\x98\xf2\x34\x24\x7c\x4c\x8d\x3c\x27\x41\x8a\x19\x4b\x9b\xbd\x8f\xb5\xdb\x71\x26\x15\x84\x7c\xc4\x05\xd8\x02\x0f\x44\x89\xa3\xd7\x20\x16\x7d\x30\x0d\x21\x0d\x74\xaa\x08\x73\xf9\x68\xc5\x2c\x8a\x68\x6a\x74\x1b\x37\x5f\x93\xf0\x3d\xb8\xd9\x9a\xb4\x06\x03\x6c\x71\xd0\xc0\x80\x8b\x68\x4e\x3c\x21\x05\x9b\xc1\x26\x96\x42\x57\xc9\x9c\xee\xc8\xcc\x02\xaf\x8f\x6b\xd9\x72\xd4\x9e\x0f\xcf\x36\xc0\x16\x95\x3e\x48\x29\xb8\xc1\xd5\xdf\x3b\x8f\xda\x11\xf4\x42\xd7\x4e\x84\xd5\xe7\xc2\x38\x42\x1a\xb4\x91\xf3\x5d\xc3\xbc\xa1\x5b\x77\x0c\xf1\xa1\xd5\xe4\xb3\x51\xa4\x06\xb2\x3e\x27\x1b\x95\xba\x71\x1f\x95\x56\x0f\xbd\x3c\x77\x13\xed\xcb\xc9\xc7\x5d\x0e\xc5\x18\x1f\x8c\xe9\xd1\xeb\xfd\xc6\x78\x4a\x18\x31\xe1\x92\x6a\x42\x18\x7f\xbd\xbc\xec\x95\xa5\xbe\xb1\x59\x1c\xe9\x49\xfd\x7c\x4f\xb6\x0f\x7b\xdb\xcd\x66\x44\x70\x69\x79\x19\x6b\xb3\xef\xb5\x60\x4d\x5c\x4b\xc3\xf8\x48\xa6\xc2\xa6\xbb\x29\x64\x9f\x98\x61\xb8\xb9\x6d\xdc\xbe\x73\x0c\xa9\x0d\xf4\x47\xbd\x36\x8a\xc4\xe4\xf8\xb0\x13\xb1\x8f\x73\x32\x1f\x39\x6f\x9b\x5d\x7c\xdc\xdc\x6e\x55\x4b\x19\xe0\x8a\x29\x14\x03\xf6\xf3\xf5\xb2\x09\x4b\x85\xdf\xfb\x88\x0d\x2d\xec\xe3\xae\x08\x89\x07\x8e\x81\xe7\x99\xb5\xe9\xd2\x8e\x6e\xbb\xa3\x2d\x97\xfc\xa6\xb9\x56\x91\x76\xfc\xad\x4f\xb9\x4a\xf8\xf7\x23\x61\x0f\x07\xff\x3f\x0a\x1a\x5e\x68\x87\xf1\x51\x3e\x48\x22\x14\xca\x0e\xff\x0e\x55\x3b\x56\x97\xcd\xab\xc5\x60\x76\x14\x1f\xf6\xcd\xe3\x9c\xfa\x75\x69\xd5\x86\x9c\x76\x9d\x2e\x27\x29\xac\xfa\x1b\xf5\xed\xd7\x8f\x0e\x6a\xf5\x38\x04\x27\xb1\xde\xeb\x37\xd2\x78\x28\x55\x76\xb8\x38\x8e\xa8\x46\x8d\x3e\x22\x99\x8a\xb0\xd4\x7b\x3f\xc2\x5c\x4c\x76\xad\xef\x1a\xec\x6e\x82\x9c\x62\x23\xb4\xcc\x82\xb3\x6d\x65\x7d\x0f\x76\x3b\xff\x05\x00\x00\xff\xff\xc1\x89\x58\x88\xc3\x11\x00\x00")

func templates_mysql_table_go_tpl() ([]byte, error) {
	return bindata_read(
		_templates_mysql_table_go_tpl,
		"templates/mysql/table.go.tpl",
	)
}

var _templates_mysql_xo_wire_go_tpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8d\xc1\x6a\xc3\x30\x10\x44\xcf\x15\xe8\x1f\x06\x9f\x6c\x68\xe5\x2f\xe8\xa9\x77\x1f\xea\xde\xcb\xda\x5d\x54\x11\xcb\x2b\x64\x25\x4e\x10\xfa\xf7\xa0\x98\x90\x3d\xec\x61\xe6\xf1\x26\xd0\x7c\x22\xcb\xb8\xca\xef\xee\x22\x6b\xa5\x95\xf3\x41\x62\x42\xab\xd5\x5b\x63\x5d\xfa\x3f\x4f\x66\x16\xdf\x5b\x11\xbb\x70\x5f\xa9\x46\xab\xae\x92\x17\x8a\xf8\xe6\x20\x9b\x4b\x12\x6f\x23\x27\x7c\xa2\xf6\x66\xe0\x7d\xe4\xd4\x6a\x05\x00\x39\x23\xd2\x6a\x19\x06\xa5\x1c\x51\xbd\xc8\x41\x2a\x98\x33\x66\xf2\xbc\x7c\xd1\xc6\x30\x3f\x34\x2d\x7c\xfc\x81\x3c\xa3\x94\xd7\xc0\xfb\xd3\xf7\x01\x5e\xff\x1e\xb2\xee\x1e\x00\x00\xff\xff\x12\x75\x18\xab\xc0\x00\x00\x00")

func templates_mysql_xo_wire_go_tpl() ([]byte, error) {
	return bindata_read(
		_templates_mysql_xo_wire_go_tpl,
		"templates/mysql/xo_wire.go.tpl",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"templates/mysql/enum.go.tpl": templates_mysql_enum_go_tpl,
	"templates/mysql/repo.go.tpl": templates_mysql_repo_go_tpl,
	"templates/mysql/table.go.tpl": templates_mysql_table_go_tpl,
	"templates/mysql/xo_wire.go.tpl": templates_mysql_xo_wire_go_tpl,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"templates/mysql/enum.go.tpl": &_bintree_t{templates_mysql_enum_go_tpl, map[string]*_bintree_t{
	}},
	"templates/mysql/repo.go.tpl": &_bintree_t{templates_mysql_repo_go_tpl, map[string]*_bintree_t{
	}},
	"templates/mysql/table.go.tpl": &_bintree_t{templates_mysql_table_go_tpl, map[string]*_bintree_t{
	}},
	"templates/mysql/xo_wire.go.tpl": &_bintree_t{templates_mysql_xo_wire_go_tpl, map[string]*_bintree_t{
	}},
}}
